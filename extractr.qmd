---
title: "Extractr"
format: html
editor: 
  mode: source
editor_options: 
  chunk_output_type: console
params:
  data_var: noaa_sss
  erddap_url: https://coastwatch.noaa.gov/erddap/griddap/noaacwSMOSsss3day.html
  erddap_variable: sss
  # data_var: noaa_sst
  # erddap_url: https://coastwatch.noaa.gov/erddap/griddap/noaacrwsstDaily.html
  # erddap_variable: analysed_sst
---

## Get Data using `extractr`

```{r}
#| label: setup

# dir_extractr = "/share/github/marinebon/extractr" # dir_extractr = "~/Github/marinebon/extractr"
# devtools::load_all(dir_extractr)
# devtools::install_local(dir_extractr, force = T)
# devtools::install_github("marinebon/extractr")
librarian::shelf(
  dplyr, DT, glue, here, lubridate, mapview, purrr, readr, sf, stringr, terra,
  marinebon/extractr)

sanctuaries <- readRDS(here("../climate-dashboard/data/sanctuaries.rds")) |> 
  filter(nms != "HIHWNMS")  # TODO: sort dateline sanctuary later
# mapView(sanctuaries)
# sanctuaries |>
#   st_drop_geometry() |>
#   datatable()

dir_out <- here(glue("data/{params$data_var}"))
dir.create(dir_out, showWarnings = F, recursive = T)
```

```{r}
#| label: dataset

(ed <- ed_info(params$erddap_url))
(v <- params$erddap_variable)
times <- ed_dim(ed, "time")
```


```{r}
#| label: iterate

sanctuary_years <- sanctuaries |> 
  st_drop_geometry() |> 
  arrange(nms) |> 
  select(nms) |> 
  cross_join(
    tibble(
      year = year(min(times)):year(max(times)))) |> 
  mutate(
    i = 1:n())
# rerddap::cache_delete_all()

sanctuary_years |> 
  # filter(nms == "GRNMS")
  slice(97:98) |> # DEBUG
  pmap(
    \(i, nms, year){   #  nms = "GRNMS"; year = 2010 ; i = 97    # DEBUG
      message(glue("{sprintf('%03d', i)}: {nms}, {year}"))
      
      times_yr <- times[year(times) == year]
      
      ply <- sanctuaries |> 
        filter(nms == !!nms)
      # TODO: consider expanding by 10% and rounding 2 digits
      # bb <- st_bbox(ply) |> stars:::bb_shrink(-0.1) |> round(2)
      
      tryCatch({
        extractr::ed_extract(
          ed, 
          var       = v,
          sf_zones  = ply,
          mask_tif  = T,
          rast_tif  = glue::glue("{dir_out}/{nms}/{year}.tif"),
          zonal_fun = "mean",
          zonal_csv = glue::glue("{dir_out}/{nms}/{year}.csv"),
          dir_nc    = glue::glue("{dir_out}/{nms}/{year}_nc"),
          keep_nc   = F,
          n_max_vals_per_req = 1e+05,
          time_min  = min(times_yr),
          time_max  = max(times_yr))
      }, error = function(e) {
        warning(glue(
          "Error: {conditionMessage(e)}"))
      })
    })
```

## TODO

- [ ] `ed_extract()`: differentiate existing done vs todo for given year
- [ ] break up `ed_extract()` into functions, not exported
- [ ] make `ed_extract()` to single MBNMS with features for main vs david; add "ALL" option to `ed_extract()`
- [ ] add buffer to all (and redo)
- [ ] wrap retry with `ed_dim()` too


```{r}
devtools::session_info()
```

